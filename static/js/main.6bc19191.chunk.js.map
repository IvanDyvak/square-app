{"version":3,"sources":["context/user-hooks.js","components/Header.js","components/SquareItem.js","App.js","index.js"],"names":["AppContext","createContext","useAppData","useContext","AppProvider","_ref","children","_useState","useState","_useState2","Object","slicedToArray","isActiveSquare","setIsActiveSquare","_useState3","_useState4","colId","setColdId","_useState5","_useState6","rowId","setRowdId","react_default","a","createElement","Provider","value","activeToggle","e","Number","target","id","parentNode","console","log","Header","className","src","alt","SquareItem","_useAppData","onMouseEnter","concat","App","option","setOption","field","setField","level","setLevel","useEffect","fetch","then","response","json","data","name","toConsumableArray","catch","error","components_Header","onSubmit","event","preventDefault","selectOptions","document","getElementById","modeId","options","selectedIndex","onChange","map","key","type","Array","keys","num","components_SquareItem","rootElement","createRoot","render","StrictMode","user_hooks_AppProvider","src_App"],"mappings":"sNAEMA,EAAaC,0BACNC,EAAa,WAAH,OAASC,qBAAWH,IAE9BI,EAAc,SAAHC,GAAqB,IAAfC,EAAQD,EAARC,SAAQC,EACYC,oBAAS,GAAMC,EAAAC,OAAAC,EAAA,EAAAD,CAAAH,EAAA,GAArDK,EAAcH,EAAA,GAAEI,EAAiBJ,EAAA,GAAAK,EACdN,mBAAS,GAAEO,EAAAL,OAAAC,EAAA,EAAAD,CAAAI,EAAA,GAA/BE,EAAKD,EAAA,GAAEE,EAASF,EAAA,GAAAG,EACIV,mBAAS,GAAEW,EAAAT,OAAAC,EAAA,EAAAD,CAAAQ,EAAA,GAA/BE,EAAKD,EAAA,GAAEE,EAASF,EAAA,GAWzB,OACEG,EAAAC,EAAAC,cAACxB,EAAWyB,SAAQ,CAClBC,MAAO,CACHd,iBACAC,oBACAc,aAdmB,SAACC,GAClBf,GAAmBD,GACnBK,EAAUY,OAAOD,EAAEE,OAAOC,IAAM,GAChCV,EAAUQ,OAAOD,EAAEE,OAAOE,WAAWD,IAAM,GAC3CE,QAAQC,IAAIlB,IAWdA,QACAC,YACAG,QACAC,cAGHf,uBCpBQ6B,MARf,WAEI,OACIb,EAAAC,EAAAC,cAAA,UAAQY,UAAU,cACdd,EAAAC,EAAAC,cAAA,OAAKa,IAAI,kBAAkBD,UAAU,WAAWE,IAAI,iBCWjDC,MAbf,SAAmBlC,GAAQ,IAAL0B,EAAE1B,EAAF0B,GAAES,EACqBtC,IAAjCU,EAAc4B,EAAd5B,eAAgBe,EAAYa,EAAZb,aAGxB,OACIL,EAAAC,EAAAC,cAAA,OACIiB,aAAcd,EACdS,UAAS,sBAAAM,OAAwB9B,EAAiB,SAAW,IACjEmB,GAAIA,KCyEGY,MA/Ef,WAAe,IAAApC,EACmBC,mBAAS,IAAGC,EAAAC,OAAAC,EAAA,EAAAD,CAAAH,EAAA,GAAlCqC,EAAMnC,EAAA,GAAEoC,EAASpC,EAAA,GAAAK,EACGN,mBAAS,GAAEO,EAAAL,OAAAC,EAAA,EAAAD,CAAAI,EAAA,GAA/BgC,EAAK/B,EAAA,GAAEgC,EAAQhC,EAAA,GAAAG,EACKV,mBAAS,IAAGW,EAAAT,OAAAC,EAAA,EAAAD,CAAAQ,EAAA,GAAhC8B,EAAK7B,EAAA,GAAE8B,EAAQ9B,EAAA,GAAAqB,EACEtC,IAAjBc,EAAKwB,EAALxB,MAAOI,EAAKoB,EAALpB,MAkCf,OAhCA8B,oBAAU,WAENC,MAAK,mCACAC,KAAK,SAACC,GAAQ,OAAKA,EAASC,SAC5BF,KAAK,SAACC,GACH,IACME,EAAI,GAAAb,OADU,CAAC,CAACc,KAAM,YAAaV,MAAO,IACnBpC,OAAA+C,EAAA,EAAA/C,CAAI2C,IACjCpB,QAAQC,IAAIqB,GAGZN,EAASM,KAIZG,MAAM,SAACC,GACJ1B,QAAQ0B,MAAM,SAAUA,GACxBV,EAAS,MAGjB,IAcA3B,EAAAC,EAAAC,cAAA,OAAKY,UAAU,OACXd,EAAAC,EAAAC,cAACoC,EAAM,MACPtC,EAAAC,EAAAC,cAAA,QAAMqC,SAVO,SAACC,GAClBA,EAAMC,iBACN,IAAMC,EAAgBC,SAASC,eAAe,cAC1CC,EAAStC,OAAOmC,EAAcI,QAAQJ,EAAcK,eAAetC,IACvEgB,EAASoB,KAOD7C,EAAAC,EAAAC,cAAA,aACIF,EAAAC,EAAAC,cAAA,UAAQO,GAAG,aAAaL,MAAOkB,EAAQ0B,SAhBlC,SAACR,GAClBjB,EAAUiB,EAAMhC,OAAOJ,SAgBNsB,EAAMuB,IAAI,SAAAlE,GAAA,IAAEmD,EAAInD,EAAJmD,KAAMV,EAAKzC,EAALyC,MAAK,OACpBxB,EAAAC,EAAAC,cAAA,UAAQE,MAAO8B,EAAMgB,IAAKhB,EAAMzB,GAAIe,GAAQU,OAIxDlC,EAAAC,EAAAC,cAAA,SAAOiD,KAAK,SAAS/C,MAAM,QAAQU,UAAU,cAEjDd,EAAAC,EAAAC,cAAA,OAAKY,UAAU,WACXd,EAAAC,EAAAC,cAAA,OAAKY,UAAU,gBAEP1B,OAAA+C,EAAA,EAAA/C,CAAIgE,MAAM5B,GAAO6B,QAAQJ,IAAI,SAACK,GAAG,OAE7BtD,EAAAC,EAAAC,cAAA,OAAKY,UAAU,YAAYoC,IAAKI,EAAK7C,GAAI6C,GAEjClE,OAAA+C,EAAA,EAAA/C,CAAIgE,MAAM5B,GAAO6B,QAAQJ,IAAI,SAACK,GAAG,OAC7BtD,EAAAC,EAAAC,cAACqD,EAAU,CACPL,IAAKI,EAAK7C,GAAI6C,UAQ1CtD,EAAAC,EAAAC,cAAA,OAAKY,UAAU,2BACXd,EAAAC,EAAAC,cAAA,6BACAF,EAAAC,EAAAC,cAAA,OAAKY,UAAU,sBACXd,EAAAC,EAAAC,cAAA,mBAAWJ,GACXE,EAAAC,EAAAC,cAAA,mBAAWR,QCtE7B8D,SAAcb,SAASC,eAAe,SAC/Ba,qBAAWD,GACnBE,OACH1D,EAAAC,EAAAC,cAACF,EAAAC,EAAM0D,WAAU,KACb3D,EAAAC,EAAAC,cAAC0D,EAAW,KACR5D,EAAAC,EAAAC,cAAC2D,EAAG","file":"static/js/main.6bc19191.chunk.js","sourcesContent":["import React, {createContext, useState, useContext, useEffect} from \"react\";\r\n\r\nconst AppContext = createContext();\r\nexport const useAppData = () => useContext(AppContext);\r\n\r\nexport const AppProvider = ({ children }) => {\r\n    const [ isActiveSquare, setIsActiveSquare ] = useState(false);\r\n    const [colId, setColdId] = useState(0);\r\n    const [rowId, setRowdId] = useState(0);\r\n\r\n        const activeToggle = (e) => {\r\n            setIsActiveSquare(!isActiveSquare);\r\n            setColdId(Number(e.target.id) + 1);\r\n            setRowdId(Number(e.target.parentNode.id) + 1);\r\n            console.log(colId);\r\n        }\r\n\r\n\r\n\r\n  return (\r\n    <AppContext.Provider\r\n      value={{\r\n          isActiveSquare,\r\n          setIsActiveSquare,\r\n          activeToggle,\r\n          colId,\r\n          setColdId,\r\n          rowId,\r\n          setRowdId,\r\n      }}\r\n    >\r\n      {children}\r\n    </AppContext.Provider>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport './Header.css';\r\n\r\nfunction Header() {\r\n\r\n    return(\r\n        <header className=\"App-header\">\r\n            <img src=\"images/logo.png\" className=\"App-logo\" alt=\"logo\" />\r\n        </header>\r\n    )\r\n}\r\nexport default Header;","import React, {useState} from 'react';\r\nimport './SquareItem.css';\r\nimport { useAppData } from '../context/user-hooks';\r\n\r\n\r\nfunction SquareItem ({id}) {\r\n    const { isActiveSquare, activeToggle } = useAppData();\r\n\r\n\r\n    return(\r\n        <div\r\n            onMouseEnter={activeToggle}\r\n            className={`squares-list__item ${isActiveSquare ? 'active' : ''}` }\r\n        id={id}>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default SquareItem;","import React, { useEffect, useState } from 'react';\nimport './App.css';\nimport Header from \"./components/Header\";\nimport SquareItem from \"./components/SquareItem\";\nimport { useAppData } from \"./context/user-hooks\";\n\n\nfunction App() {\n    const [ option, setOption ] = useState('');\n    const [ field, setField ] = useState(0);\n    const [ level, setLevel ] = useState([]);\n    const { colId, rowId } = useAppData();\n\n    useEffect(() => {\n\n        fetch(`https://demo7919674.mockable.io`)\n            .then((response) => response.json())\n            .then((response) => {\n                const firstOption = [{name: \"Pick mode\", field: 0}];\n                const data = [...firstOption, ...response];\n                console.log(data);\n                // if(!data.length) return <div>Sorry, there's no info</div>\n\n                setLevel(data);\n\n            })\n\n            .catch((error) => {\n                console.error('Error:', error);\n                setLevel(0);\n            });\n        },\n        []);\n\n    const handleChange = (event) => {\n        setOption(event.target.value);\n    }\n\n    const handleSubmit = (event) => {\n        event.preventDefault();\n        const selectOptions = document.getElementById(\"modeLevels\");\n        let modeId = Number(selectOptions.options[selectOptions.selectedIndex].id);\n        setField(modeId);\n    }\n\n    return (\n        <div className=\"App\">\n            <Header />\n            <form onSubmit={handleSubmit}>\n                <label>\n                    <select id=\"modeLevels\" value={option} onChange={handleChange}>\n                        {level.map(({name, field}) =>\n                            <option value={name} key={name} id={field}>{name}</option>\n                        )}\n                    </select>\n                </label>\n                <input type=\"submit\" value=\"Start\" className=\"init-btn\"/>\n            </form>\n            <div className=\"wrapper\">\n                <div className=\"squares-list\">\n                    {\n                        [...Array(field).keys()].map((num) =>\n\n                            <div className=\"row-items\" key={num} id={num}>\n                                {\n                                    [...Array(field).keys()].map((num) =>\n                                        <SquareItem\n                                            key={num} id={num}\n                                        />\n                                    )\n                                }\n                            </div>\n                        )\n                    }\n                </div>\n                <div className=\"hovered-items-info-wrap\">\n                    <h2>Hovered squares</h2>\n                    <div className=\"hovered-items-info\">\n                        <span>row {rowId}</span>\n                        <span>col {colId}</span>\n                    </div>\n                </div>\n            </div>\n        </div>\n  );\n}\nexport default App;\n","import React from 'react';\nimport { createRoot } from 'react-dom/client';\nimport { AppProvider } from \"./context/user-hooks\";\n\n\nimport App from './App';\n\nimport './index.css';\n\nconst rootElement = document.getElementById('root');\nconst root = createRoot(rootElement);\nroot.render(\n  <React.StrictMode>\n      <AppProvider>\n          <App />\n      </AppProvider>\n\n  </React.StrictMode>\n);"],"sourceRoot":""}